---
source: go-away-derive-internals/src/type_metadata_derive/mod.rs
expression: "test_conversion(quote! { struct MyData(String) ; })"

---
#[automatically_derived]
impl ::go_away::TypeMetadata for MyData {
    fn metadata(registry: &mut ::go_away::TypeRegistry) -> ::go_away::types::FieldType {
        use go_away::types::{self, FieldType};
        let nt = types::NewType {
            name: "MyData".to_string(),
            inner: <String as ::go_away::TypeMetadata>::metadata(registry),
        };
        FieldType::Named(registry.register_newtype(::go_away::TypeId::for_type::<MyData>(), nt))
    }
}
